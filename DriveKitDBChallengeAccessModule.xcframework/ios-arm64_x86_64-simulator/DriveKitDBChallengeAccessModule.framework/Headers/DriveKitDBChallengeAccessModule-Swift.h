#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef DRIVEKITDBCHALLENGEACCESSMODULE_SWIFT_H
#define DRIVEKITDBCHALLENGEACCESSMODULE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DriveKitDBChallengeAccessModule",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("DBChallenge")
@interface DBChallenge : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@class DBChallengeGroup;
@class NSSet;

@interface DBChallenge (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
- (void)addGroupsObject:(DBChallengeGroup * _Nonnull)value;
- (void)removeGroupsObject:(DBChallengeGroup * _Nonnull)value;
- (void)addGroups:(NSSet * _Nonnull)values;
- (void)removeGroups:(NSSet * _Nonnull)values;
@end

@class NSString;
@class NSDate;

@interface DBChallenge (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic, copy) NSString * _Nullable challengeDescription;
@property (nonatomic, copy) NSString * _Nullable conditions;
@property (nonatomic, copy) NSString * _Nullable conditionsDescription;
@property (nonatomic) BOOL conditionsFilled;
@property (nonatomic, copy) NSString * _Nullable driverConditions;
@property (nonatomic, copy) NSDate * _Nullable endDate;
@property (nonatomic) int32_t iconCode;
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic) BOOL isRegistered;
@property (nonatomic) int32_t nbDriverRanked;
@property (nonatomic) int32_t nbDriverRegistered;
@property (nonatomic, copy) NSString * _Nullable optinText;
@property (nonatomic) int32_t rank;
@property (nonatomic, copy) NSString * _Nullable rankKey;
@property (nonatomic, copy) NSString * _Nullable rules;
@property (nonatomic, copy) NSDate * _Nullable startDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic) int32_t themeCode;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic) int32_t type;
@property (nonatomic, strong) NSSet * _Nullable groups;
@end


SWIFT_CLASS_NAMED("DBChallengeDetail")
@interface DBChallengeDetail : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@class DBChallengeDriverRanked;

@interface DBChallengeDetail (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
- (void)addDriverRankedObject:(DBChallengeDriverRanked * _Nonnull)value;
- (void)removeDriverRankedObject:(DBChallengeDriverRanked * _Nonnull)value;
- (void)addDriverRanked:(NSSet * _Nonnull)values;
- (void)removeDriverRanked:(NSSet * _Nonnull)values;
@end

@class NSArray;
@class DBChallengeStats;
@class DBChallengeDriverStats;

@interface DBChallengeDetail (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic, copy) NSString * _Nullable challengeId;
@property (nonatomic) BOOL conditionsFilled;
@property (nonatomic) BOOL isRegistered;
@property (nonatomic, strong) NSArray * _Nullable itinIds;
@property (nonatomic) int32_t nbDriverRanked;
@property (nonatomic) int32_t nbDriverRegistered;
@property (nonatomic) int32_t userIndex;
@property (nonatomic, strong) DBChallengeStats * _Nullable challengeStats;
@property (nonatomic, strong) NSSet * _Nullable driverRanked;
@property (nonatomic, strong) DBChallengeDriverStats * _Nullable driverStats;
@end


SWIFT_CLASS_NAMED("DBChallengeDriverRanked")
@interface DBChallengeDriverRanked : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface DBChallengeDriverRanked (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic) double distance;
@property (nonatomic) int32_t previousRank;
@property (nonatomic, copy) NSString * _Nullable pseudo;
@property (nonatomic) int32_t rank;
@property (nonatomic) double score;
@property (nonatomic, strong) DBChallengeDetail * _Nullable challengeDetail;
@end


SWIFT_CLASS_NAMED("DBChallengeDriverStats")
@interface DBChallengeDriverStats : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface DBChallengeDriverStats (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic) double distance;
@property (nonatomic) double duration;
@property (nonatomic) int32_t numberTrip;
@property (nonatomic) int32_t rank;
@property (nonatomic) double score;
@property (nonatomic, strong) DBChallengeDetail * _Nullable challnegeDetail;
@end


SWIFT_CLASS_NAMED("DBChallengeGroup")
@interface DBChallengeGroup : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface DBChallengeGroup (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable label;
@property (nonatomic, strong) DBChallenge * _Nullable challenge;
@end


SWIFT_CLASS_NAMED("DBChallengeStats")
@interface DBChallengeStats : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface DBChallengeStats (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic) double distance;
@property (nonatomic) double duration;
@property (nonatomic) double maxScore;
@property (nonatomic) double minScore;
@property (nonatomic) int32_t numberDriver;
@property (nonatomic) int32_t numberTrip;
@property (nonatomic) double score;
@property (nonatomic, strong) DBChallengeDetail * _Nullable challengeDetail;
@end

enum DKChallengeStatus : NSInteger;
@class DKChallengeGroup;

SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule11DKChallenge")
@interface DKChallenge : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) NSInteger iconCode;
@property (nonatomic, readonly) NSInteger themeCode;
@property (nonatomic, readonly) NSInteger type;
@property (nonatomic, readonly, copy) NSString * _Nonnull challengeDescription;
@property (nonatomic, readonly, copy) NSString * _Nullable conditionsDescription;
@property (nonatomic, readonly, copy) NSString * _Nullable optinText;
@property (nonatomic, readonly, copy) NSString * _Nullable rankKey;
@property (nonatomic, readonly, copy) NSString * _Nullable rules;
@property (nonatomic, readonly) enum DKChallengeStatus status;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSDate * _Nonnull endDate;
@property (nonatomic, readonly, copy) NSDate * _Nonnull startDate;
@property (nonatomic, readonly) BOOL conditionsFilled;
@property (nonatomic, readonly) BOOL isRegistered;
@property (nonatomic, readonly) NSInteger nbDriverRegistered;
@property (nonatomic, readonly) NSInteger nbDriverRanked;
@property (nonatomic, readonly) NSInteger rank;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull conditions;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull driverConditions;
@property (nonatomic, readonly, copy) NSArray<DKChallengeGroup *> * _Nonnull groups;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class DKDriverStats;
@class DKChallengeStats;
@class DKDriverRanked;

SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule17DKChallengeDetail")
@interface DKChallengeDetail : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull challengeId;
@property (nonatomic, readonly) NSInteger userIndex;
@property (nonatomic, readonly) NSInteger nbDriverRanked;
@property (nonatomic, readonly) NSInteger nbDriverRegistered;
@property (nonatomic, readonly) BOOL isRegistered;
@property (nonatomic, readonly) BOOL conditionsFilled;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull itinIds;
@property (nonatomic, readonly, strong) DKDriverStats * _Nonnull driverStats;
@property (nonatomic, readonly, strong) DKChallengeStats * _Nonnull challengeStats;
@property (nonatomic, readonly, copy) NSArray<DKDriverRanked *> * _Nonnull driverRanked;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule16DKChallengeGroup")
@interface DKChallengeGroup : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull label;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule16DKChallengeStats")
@interface DKChallengeStats : NSObject
@property (nonatomic, readonly) NSInteger numberDriver;
@property (nonatomic, readonly) NSInteger numberTrip;
@property (nonatomic, readonly) double score;
@property (nonatomic, readonly) double minScore;
@property (nonatomic, readonly) double maxScore;
@property (nonatomic, readonly) double distance;
@property (nonatomic, readonly) double duration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DKChallengeStatus, open) {
  DKChallengeStatusDraft = 0,
  DKChallengeStatusScheduled = 1,
  DKChallengeStatusPending = 2,
  DKChallengeStatusFinished = 3,
  DKChallengeStatusArchived = 4,
  DKChallengeStatusUndefined = 5,
};

typedef SWIFT_ENUM(NSInteger, DKChallengeType, open) {
  DKChallengeTypeSafety = 0,
  DKChallengeTypeEcoDriving = 1,
  DKChallengeTypeDistraction = 2,
  DKChallengeTypeSpeeding = 3,
  DKChallengeTypeHardBraking = 4,
  DKChallengeTypeHardAcceleration = 5,
  DKChallengeTypeDeprecated = 6,
  DKChallengeTypeUnknown = 7,
};


SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule14DKDriverRanked")
@interface DKDriverRanked : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable pseudo;
@property (nonatomic, readonly) NSInteger rank;
@property (nonatomic, readonly) NSInteger previousRank;
@property (nonatomic, readonly) double score;
@property (nonatomic, readonly) double distance;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule13DKDriverStats")
@interface DKDriverStats : NSObject
@property (nonatomic, readonly) NSInteger rank;
@property (nonatomic, readonly) NSInteger numberTrip;
@property (nonatomic, readonly) double score;
@property (nonatomic, readonly) double distance;
@property (nonatomic, readonly) double duration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef DRIVEKITDBCHALLENGEACCESSMODULE_SWIFT_H
#define DRIVEKITDBCHALLENGEACCESSMODULE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DriveKitDBChallengeAccessModule",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("DBChallenge")
@interface DBChallenge : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@class DBChallengeGroup;
@class NSSet;

@interface DBChallenge (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
- (void)addGroupsObject:(DBChallengeGroup * _Nonnull)value;
- (void)removeGroupsObject:(DBChallengeGroup * _Nonnull)value;
- (void)addGroups:(NSSet * _Nonnull)values;
- (void)removeGroups:(NSSet * _Nonnull)values;
@end

@class NSString;
@class NSDate;

@interface DBChallenge (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic, copy) NSString * _Nullable challengeDescription;
@property (nonatomic, copy) NSString * _Nullable conditions;
@property (nonatomic, copy) NSString * _Nullable conditionsDescription;
@property (nonatomic) BOOL conditionsFilled;
@property (nonatomic, copy) NSString * _Nullable driverConditions;
@property (nonatomic, copy) NSDate * _Nullable endDate;
@property (nonatomic) int32_t iconCode;
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic) BOOL isRegistered;
@property (nonatomic) int32_t nbDriverRanked;
@property (nonatomic) int32_t nbDriverRegistered;
@property (nonatomic, copy) NSString * _Nullable optinText;
@property (nonatomic) int32_t rank;
@property (nonatomic, copy) NSString * _Nullable rankKey;
@property (nonatomic, copy) NSString * _Nullable rules;
@property (nonatomic, copy) NSDate * _Nullable startDate;
@property (nonatomic, copy) NSString * _Nullable status;
@property (nonatomic) int32_t themeCode;
@property (nonatomic, copy) NSString * _Nullable title;
@property (nonatomic) int32_t type;
@property (nonatomic, strong) NSSet * _Nullable groups;
@end


SWIFT_CLASS_NAMED("DBChallengeDetail")
@interface DBChallengeDetail : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@class DBChallengeDriverRanked;

@interface DBChallengeDetail (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
- (void)addDriverRankedObject:(DBChallengeDriverRanked * _Nonnull)value;
- (void)removeDriverRankedObject:(DBChallengeDriverRanked * _Nonnull)value;
- (void)addDriverRanked:(NSSet * _Nonnull)values;
- (void)removeDriverRanked:(NSSet * _Nonnull)values;
@end

@class NSArray;
@class DBChallengeStats;
@class DBChallengeDriverStats;

@interface DBChallengeDetail (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic, copy) NSString * _Nullable challengeId;
@property (nonatomic) BOOL conditionsFilled;
@property (nonatomic) BOOL isRegistered;
@property (nonatomic, strong) NSArray * _Nullable itinIds;
@property (nonatomic) int32_t nbDriverRanked;
@property (nonatomic) int32_t nbDriverRegistered;
@property (nonatomic) int32_t userIndex;
@property (nonatomic, strong) DBChallengeStats * _Nullable challengeStats;
@property (nonatomic, strong) NSSet * _Nullable driverRanked;
@property (nonatomic, strong) DBChallengeDriverStats * _Nullable driverStats;
@end


SWIFT_CLASS_NAMED("DBChallengeDriverRanked")
@interface DBChallengeDriverRanked : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface DBChallengeDriverRanked (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic) double distance;
@property (nonatomic) int32_t previousRank;
@property (nonatomic, copy) NSString * _Nullable pseudo;
@property (nonatomic) int32_t rank;
@property (nonatomic) double score;
@property (nonatomic, strong) DBChallengeDetail * _Nullable challengeDetail;
@end


SWIFT_CLASS_NAMED("DBChallengeDriverStats")
@interface DBChallengeDriverStats : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface DBChallengeDriverStats (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic) double distance;
@property (nonatomic) double duration;
@property (nonatomic) int32_t numberTrip;
@property (nonatomic) int32_t rank;
@property (nonatomic) double score;
@property (nonatomic, strong) DBChallengeDetail * _Nullable challnegeDetail;
@end


SWIFT_CLASS_NAMED("DBChallengeGroup")
@interface DBChallengeGroup : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface DBChallengeGroup (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSString * _Nullable label;
@property (nonatomic, strong) DBChallenge * _Nullable challenge;
@end


SWIFT_CLASS_NAMED("DBChallengeStats")
@interface DBChallengeStats : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface DBChallengeStats (SWIFT_EXTENSION(DriveKitDBChallengeAccessModule))
@property (nonatomic) double distance;
@property (nonatomic) double duration;
@property (nonatomic) double maxScore;
@property (nonatomic) double minScore;
@property (nonatomic) int32_t numberDriver;
@property (nonatomic) int32_t numberTrip;
@property (nonatomic) double score;
@property (nonatomic, strong) DBChallengeDetail * _Nullable challengeDetail;
@end

enum DKChallengeStatus : NSInteger;
@class DKChallengeGroup;

SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule11DKChallenge")
@interface DKChallenge : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly) NSInteger iconCode;
@property (nonatomic, readonly) NSInteger themeCode;
@property (nonatomic, readonly) NSInteger type;
@property (nonatomic, readonly, copy) NSString * _Nonnull challengeDescription;
@property (nonatomic, readonly, copy) NSString * _Nullable conditionsDescription;
@property (nonatomic, readonly, copy) NSString * _Nullable optinText;
@property (nonatomic, readonly, copy) NSString * _Nullable rankKey;
@property (nonatomic, readonly, copy) NSString * _Nullable rules;
@property (nonatomic, readonly) enum DKChallengeStatus status;
@property (nonatomic, readonly, copy) NSString * _Nonnull title;
@property (nonatomic, readonly, copy) NSDate * _Nonnull endDate;
@property (nonatomic, readonly, copy) NSDate * _Nonnull startDate;
@property (nonatomic, readonly) BOOL conditionsFilled;
@property (nonatomic, readonly) BOOL isRegistered;
@property (nonatomic, readonly) NSInteger nbDriverRegistered;
@property (nonatomic, readonly) NSInteger nbDriverRanked;
@property (nonatomic, readonly) NSInteger rank;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull conditions;
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Nonnull driverConditions;
@property (nonatomic, readonly, copy) NSArray<DKChallengeGroup *> * _Nonnull groups;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


@class DKDriverStats;
@class DKChallengeStats;
@class DKDriverRanked;

SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule17DKChallengeDetail")
@interface DKChallengeDetail : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull challengeId;
@property (nonatomic, readonly) NSInteger userIndex;
@property (nonatomic, readonly) NSInteger nbDriverRanked;
@property (nonatomic, readonly) NSInteger nbDriverRegistered;
@property (nonatomic, readonly) BOOL isRegistered;
@property (nonatomic, readonly) BOOL conditionsFilled;
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Nonnull itinIds;
@property (nonatomic, readonly, strong) DKDriverStats * _Nonnull driverStats;
@property (nonatomic, readonly, strong) DKChallengeStats * _Nonnull challengeStats;
@property (nonatomic, readonly, copy) NSArray<DKDriverRanked *> * _Nonnull driverRanked;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule16DKChallengeGroup")
@interface DKChallengeGroup : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull id;
@property (nonatomic, readonly, copy) NSString * _Nonnull label;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule16DKChallengeStats")
@interface DKChallengeStats : NSObject
@property (nonatomic, readonly) NSInteger numberDriver;
@property (nonatomic, readonly) NSInteger numberTrip;
@property (nonatomic, readonly) double score;
@property (nonatomic, readonly) double minScore;
@property (nonatomic, readonly) double maxScore;
@property (nonatomic, readonly) double distance;
@property (nonatomic, readonly) double duration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

typedef SWIFT_ENUM(NSInteger, DKChallengeStatus, open) {
  DKChallengeStatusDraft = 0,
  DKChallengeStatusScheduled = 1,
  DKChallengeStatusPending = 2,
  DKChallengeStatusFinished = 3,
  DKChallengeStatusArchived = 4,
  DKChallengeStatusUndefined = 5,
};

typedef SWIFT_ENUM(NSInteger, DKChallengeType, open) {
  DKChallengeTypeSafety = 0,
  DKChallengeTypeEcoDriving = 1,
  DKChallengeTypeDistraction = 2,
  DKChallengeTypeSpeeding = 3,
  DKChallengeTypeHardBraking = 4,
  DKChallengeTypeHardAcceleration = 5,
  DKChallengeTypeDeprecated = 6,
  DKChallengeTypeUnknown = 7,
};


SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule14DKDriverRanked")
@interface DKDriverRanked : NSObject
@property (nonatomic, readonly, copy) NSString * _Nullable pseudo;
@property (nonatomic, readonly) NSInteger rank;
@property (nonatomic, readonly) NSInteger previousRank;
@property (nonatomic, readonly) double score;
@property (nonatomic, readonly) double distance;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end


SWIFT_CLASS("_TtC31DriveKitDBChallengeAccessModule13DKDriverStats")
@interface DKDriverStats : NSObject
@property (nonatomic, readonly) NSInteger rank;
@property (nonatomic, readonly) NSInteger numberTrip;
@property (nonatomic, readonly) double score;
@property (nonatomic, readonly) double distance;
@property (nonatomic, readonly) double duration;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
