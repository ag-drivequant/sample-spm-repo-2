#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef DRIVEKITVEHICLEMODULE_SWIFT_H
#define DRIVEKITVEHICLEMODULE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import DriveKitDBVehicleAccessModule;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DriveKitVehicleModule",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)








@class NSString;

SWIFT_CLASS("_TtC21DriveKitVehicleModule24DKVehicleCharacteristics")
@interface DKVehicleCharacteristics : NSObject
@property (nonatomic, copy) NSString * _Nonnull brand;
@property (nonatomic, copy) NSString * _Nonnull model;
@property (nonatomic, copy) NSString * _Nonnull version;
@property (nonatomic, copy) NSString * _Nonnull year;
@property (nonatomic) NSInteger typeIndex;
@property (nonatomic) NSInteger engineIndex;
@property (nonatomic) double power;
@property (nonatomic) double mass;
@property (nonatomic) double engineDisplacement;
@property (nonatomic) NSInteger gearboxIndex;
@property (nonatomic) double consumption;
@property (nonatomic) NSInteger autoGearboxNumber;
@property (nonatomic, copy) NSString * _Nonnull dqIndex;
@property (nonatomic, copy) NSString * _Nonnull frontTireSize;
@property (nonatomic, copy) NSString * _Nonnull rearTireSize;
@property (nonatomic) double length;
@property (nonatomic) double width;
@property (nonatomic) double height;
@property (nonatomic) NSInteger engineCylinderNb;
@property (nonatomic) NSInteger driveWheels;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC21DriveKitVehicleModule27DKCarVehicleCharacteristics")
@interface DKCarVehicleCharacteristics : DKVehicleCharacteristics
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DKDetectionModeStatus, open) {
  DKDetectionModeStatusSuccess = 0,
  DKDetectionModeStatusError = 1,
  DKDetectionModeStatusGpsModeAlreadyExists = 2,
};

typedef SWIFT_ENUM(NSInteger, DKOdometerAddHistoryStatus, open) {
  DKOdometerAddHistoryStatusSuccess = 0,
  DKOdometerAddHistoryStatusError = 1,
  DKOdometerAddHistoryStatusVehicleNotFound = 2,
  DKOdometerAddHistoryStatusBadDistance = 3,
};

typedef SWIFT_ENUM(NSInteger, DKOdometerDeleteHistoryStatus, open) {
  DKOdometerDeleteHistoryStatusSuccess = 0,
  DKOdometerDeleteHistoryStatusError = 1,
  DKOdometerDeleteHistoryStatusVehicleNotFound = 2,
  DKOdometerDeleteHistoryStatusHistoryNotFound = 3,
  DKOdometerDeleteHistoryStatusLastOdometerError = 4,
};

typedef SWIFT_ENUM(NSInteger, DKOdometerSyncStatus, open) {
  DKOdometerSyncStatusSuccess = 0,
  DKOdometerSyncStatusCacheDataOnly = 1,
  DKOdometerSyncStatusFailedToSyncOdometerCacheOnly = 2,
  DKOdometerSyncStatusVehicleNotFound = 3,
};

typedef SWIFT_ENUM(NSInteger, DKOdometerUpdateHistoryStatus, open) {
  DKOdometerUpdateHistoryStatusSuccess = 0,
  DKOdometerUpdateHistoryStatusError = 1,
  DKOdometerUpdateHistoryStatusVehicleNotFound = 2,
  DKOdometerUpdateHistoryStatusHistoryNotFound = 3,
  DKOdometerUpdateHistoryStatusBadDistance = 4,
};

typedef SWIFT_ENUM(NSInteger, DKTruckType, open) {
  DKTruckTypeStraightTruck = 0,
  DKTruckTypeSemiTrailerTruck = 1,
  DKTruckTypeRoadTrain = 2,
};


SWIFT_CLASS("_TtC21DriveKitVehicleModule29DKTruckVehicleCharacteristics")
@interface DKTruckVehicleCharacteristics : DKVehicleCharacteristics
@property (nonatomic) double ptac;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


typedef SWIFT_ENUM(NSInteger, DKVehicleBeaconBatteryStatus, open) {
  DKVehicleBeaconBatteryStatusSuccess = 0,
  DKVehicleBeaconBatteryStatusError = 1,
  DKVehicleBeaconBatteryStatusUnknownBeacon = 2,
  DKVehicleBeaconBatteryStatusInvalidBeacon = 3,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBeaconInfoStatus, open) {
  DKVehicleBeaconInfoStatusSuccess = 0,
  DKVehicleBeaconInfoStatusError = 1,
  DKVehicleBeaconInfoStatusUnknownBeacon = 2,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBeaconRemoveStatus, open) {
  DKVehicleBeaconRemoveStatusSuccess = 0,
  DKVehicleBeaconRemoveStatusError = 1,
  DKVehicleBeaconRemoveStatusUnknownVehicle = 2,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBeaconStatus, open) {
  DKVehicleBeaconStatusSuccess = 0,
  DKVehicleBeaconStatusError = 1,
  DKVehicleBeaconStatusUnknownVehicle = 2,
  DKVehicleBeaconStatusUnavailableBeacon = 3,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBluetoothRemoveStatus, open) {
  DKVehicleBluetoothRemoveStatusSuccess = 0,
  DKVehicleBluetoothRemoveStatusUnknownVehicle = 1,
  DKVehicleBluetoothRemoveStatusError = 2,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBluetoothStatus, open) {
  DKVehicleBluetoothStatusSuccess = 0,
  DKVehicleBluetoothStatusUnavailableBluetooth = 1,
  DKVehicleBluetoothStatusUnknownVehicle = 2,
  DKVehicleBluetoothStatusError = 3,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBrand, open) {
  DKVehicleBrandAbarth = 0,
  DKVehicleBrandAlpha_romeo = 1,
  DKVehicleBrandAlpina = 2,
  DKVehicleBrandAlpine = 3,
  DKVehicleBrandAston_martin = 4,
  DKVehicleBrandAudi = 5,
  DKVehicleBrandBentley = 6,
  DKVehicleBrandBmw = 7,
  DKVehicleBrandBollore = 8,
  DKVehicleBrandBugatti = 9,
  DKVehicleBrandCadillac = 10,
  DKVehicleBrandCaterham = 11,
  DKVehicleBrandChevrolet = 12,
  DKVehicleBrandChrysler = 13,
  DKVehicleBrandCitroen = 14,
  DKVehicleBrandCupra = 15,
  DKVehicleBrandDacia = 16,
  DKVehicleBrandDaewoo = 17,
  DKVehicleBrandDaf_truck = 18,
  DKVehicleBrandDaihatsu = 19,
  DKVehicleBrandDe_tomaso = 20,
  DKVehicleBrandDodge = 21,
  DKVehicleBrandDonkervoort = 22,
  DKVehicleBrandDs = 23,
  DKVehicleBrandFam_automobiles = 24,
  DKVehicleBrandFerrari = 25,
  DKVehicleBrandFiat = 26,
  DKVehicleBrandFisker = 27,
  DKVehicleBrandFord = 28,
  DKVehicleBrandGinetta = 29,
  DKVehicleBrandHommell = 30,
  DKVehicleBrandHonda = 31,
  DKVehicleBrandHummer = 32,
  DKVehicleBrandHyundai = 33,
  DKVehicleBrandInfiniti = 34,
  DKVehicleBrandIsuzu = 35,
  DKVehicleBrandIveco = 36,
  DKVehicleBrandIveco_truck = 37,
  DKVehicleBrandJaguar = 38,
  DKVehicleBrandJeep = 39,
  DKVehicleBrandKia = 40,
  DKVehicleBrandKtm = 41,
  DKVehicleBrandLada = 42,
  DKVehicleBrandLamborghini = 43,
  DKVehicleBrandLancia = 44,
  DKVehicleBrandLand_rover = 45,
  DKVehicleBrandLdv = 46,
  DKVehicleBrandLexus = 47,
  DKVehicleBrandLotus = 48,
  DKVehicleBrandMahindra = 49,
  DKVehicleBrandMan = 50,
  DKVehicleBrandMan_truck = 51,
  DKVehicleBrandMaserati = 52,
  DKVehicleBrandMatra = 53,
  DKVehicleBrandMaybach = 54,
  DKVehicleBrandMazda = 55,
  DKVehicleBrandMclaren = 56,
  DKVehicleBrandMega = 57,
  DKVehicleBrandMercedes = 58,
  DKVehicleBrandMercedes_amg = 59,
  DKVehicleBrandMercedes_truck = 60,
  DKVehicleBrandMg = 61,
  DKVehicleBrandMia_electric = 62,
  DKVehicleBrandMini = 63,
  DKVehicleBrandMitsubishi = 64,
  DKVehicleBrandMorgan = 65,
  DKVehicleBrandNissan = 66,
  DKVehicleBrandOpel = 67,
  DKVehicleBrandPeugeot = 68,
  DKVehicleBrandPgo = 69,
  DKVehicleBrandPolestar = 70,
  DKVehicleBrandPorsche = 71,
  DKVehicleBrandRenault = 72,
  DKVehicleBrandRenault_truck = 73,
  DKVehicleBrandRolls_royce = 74,
  DKVehicleBrandRover = 75,
  DKVehicleBrandSaab = 76,
  DKVehicleBrandSantana = 77,
  DKVehicleBrandScania_truck = 78,
  DKVehicleBrandSeat = 79,
  DKVehicleBrandSecma = 80,
  DKVehicleBrandSeres = 81,
  DKVehicleBrandSkoda = 82,
  DKVehicleBrandSmart = 83,
  DKVehicleBrandSsangyong = 84,
  DKVehicleBrandSubaru = 85,
  DKVehicleBrandSuzuki = 86,
  DKVehicleBrandTesla = 87,
  DKVehicleBrandToyota = 88,
  DKVehicleBrandTvr = 89,
  DKVehicleBrandVenturi = 90,
  DKVehicleBrandVinfast = 91,
  DKVehicleBrandVolkswagen = 92,
  DKVehicleBrandVolvo = 93,
  DKVehicleBrandVolvo_truck = 94,
  DKVehicleBrandWestfield = 95,
  DKVehicleBrandWiesmann = 96,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleCategory, open) {
  DKVehicleCategoryMicro = 1,
  DKVehicleCategoryCompact = 8,
  DKVehicleCategorySedan = 2,
  DKVehicleCategorySuv = 6,
  DKVehicleCategoryMinivan = 5,
  DKVehicleCategoryCommercial = 9,
  DKVehicleCategoryLuxury = 3,
  DKVehicleCategorySport = 7,
  DKVehicleCategoryTwoAxlesStraightTruck = 200,
  DKVehicleCategoryThreeAxlesStraightTruck = 201,
  DKVehicleCategoryFourAxlesStraightTruck = 202,
  DKVehicleCategoryTwoAxlesTractor = 203,
  DKVehicleCategoryThreeAxlesTractor = 204,
  DKVehicleCategoryFourAxlesTractor = 205,
};


typedef SWIFT_ENUM(NSInteger, DKVehicleEngineIndex, open) {
  DKVehicleEngineIndexGasoline = 1,
  DKVehicleEngineIndexDiesel = 2,
  DKVehicleEngineIndexElectric = 3,
  DKVehicleEngineIndexGasolineHybrid = 4,
  DKVehicleEngineIndexDieselHybrid = 5,
  DKVehicleEngineIndexBiofuel = 6,
  DKVehicleEngineIndexBiFuelBioethanol = 7,
  DKVehicleEngineIndexBiFuelNGV = 8,
  DKVehicleEngineIndexBiFuelLPG = 9,
  DKVehicleEngineIndexNotAvailable = 10,
  DKVehicleEngineIndexPlugInGasolineHybrid = 11,
  DKVehicleEngineIndexHydrogen = 12,
};


SWIFT_CLASS("_TtC21DriveKitVehicleModule26DKVehicleGetBeaconResponse")
@interface DKVehicleGetBeaconResponse : NSObject
@property (nonatomic, readonly) NSInteger major;
@property (nonatomic, readonly) NSInteger minor;
@property (nonatomic, readonly, copy) NSString * _Nonnull proximityUuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull uniqueId;
@end

typedef SWIFT_ENUM(NSInteger, DKVehicleManagerStatus, open) {
  DKVehicleManagerStatusSuccess = 0,
  DKVehicleManagerStatusUnknownVehicle = 1,
  DKVehicleManagerStatusInvalidCharacteristics = 2,
  DKVehicleManagerStatusVehicleIdAlreadyUsed = 3,
  DKVehicleManagerStatusError = 4,
  DKVehicleManagerStatusOnlyOneGpsVehicleAllowed = 5,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleReplaceStatus, open) {
  DKVehicleReplaceStatusSuccess = 0,
  DKVehicleReplaceStatusInvalidVehicle = 1,
  DKVehicleReplaceStatusError = 2,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleSyncStatus, open) {
  DKVehicleSyncStatusNoError = 0,
  DKVehicleSyncStatusCacheDataOnly = 1,
  DKVehicleSyncStatusFailedToSyncVehiclesCacheOnly = 2,
  DKVehicleSyncStatusSyncAlreadyInProgress = 3,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleSynchronizationType, open) {
  DKVehicleSynchronizationTypeDefaultSync = 0,
  DKVehicleSynchronizationTypeCache = 1,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleType, open) {
  DKVehicleTypeCar = 0,
  DKVehicleTypeTruck = 1,
};


SWIFT_CLASS("_TtC21DriveKitVehicleModule16DKVehicleVersion")
@interface DKVehicleVersion : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull dqIndex;
- (nonnull instancetype)initWithVersion:(NSString * _Nonnull)version dqIndex:(NSString * _Nonnull)dqIndex OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DKVehicle;
@class DKVehicleOdometer;
@class DKVehicleOdometerHistory;
@class DKBluetooth;
@class DKBeacon;

SWIFT_CLASS("_TtC21DriveKitVehicleModule15DriveKitVehicle")
@interface DriveKitVehicle : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sdkVersion;)
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DriveKitVehicle * _Nonnull shared;)
+ (DriveKitVehicle * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)initialize;
- (void)reset SWIFT_DEPRECATED_MSG("You no longer need to call the reset method of any module except the one in DriveKit");
- (void)getVehiclesOrderByNameAscWithType:(enum DKVehicleSynchronizationType)type completionHandler:(void (^ _Nonnull)(enum DKVehicleSyncStatus, NSArray<DKVehicle *> * _Nonnull))completionHandler;
- (void)getVehicleWithVehicleId:(NSString * _Nonnull)vehicleId type:(enum DKVehicleSynchronizationType)type completionHandler:(void (^ _Nonnull)(enum DKVehicleSyncStatus, DKVehicle * _Nullable))completionHandler;
- (void)createCustomVehicleWithCharacteristics:(DKVehicleCharacteristics * _Nonnull)characteristics name:(NSString * _Nullable)name id:(NSString * _Nonnull)id completionHandler:(void (^ _Nonnull)(enum DKVehicleManagerStatus, DKVehicle * _Nullable))completionHandler;
- (void)createCarVehicleWithCharacteristics:(DKCarVehicleCharacteristics * _Nonnull)characteristics name:(NSString * _Nullable)name liteConfig:(BOOL)liteConfig detectionMode:(enum DKDetectionMode)detectionMode completionHandler:(void (^ _Nonnull)(enum DKVehicleManagerStatus, DKVehicle * _Nullable))completionHandler;
- (void)createTruckVehicleWithCharacteristics:(DKTruckVehicleCharacteristics * _Nonnull)characteristics name:(NSString * _Nullable)name detectionMode:(enum DKDetectionMode)detectionMode completionHandler:(void (^ _Nonnull)(enum DKVehicleManagerStatus, DKVehicle * _Nullable))completionHandler;
- (void)replaceWithCarVehicleWithOldVehicleId:(NSString * _Nonnull)oldVehicleId characteristics:(DKCarVehicleCharacteristics * _Nonnull)characteristics name:(NSString * _Nullable)name liteConfig:(BOOL)liteConfig completionHandler:(void (^ _Nonnull)(enum DKVehicleReplaceStatus, DKVehicle * _Nullable))completionHandler;
- (void)replaceWithTruckVehicleWithOldVehicleId:(NSString * _Nonnull)oldVehicleId characteristics:(DKTruckVehicleCharacteristics * _Nonnull)characteristics name:(NSString * _Nullable)name completionHandler:(void (^ _Nonnull)(enum DKVehicleReplaceStatus, DKVehicle * _Nullable))completionHandler;
- (void)deleteVehicleWithVehicleId:(NSString * _Nonnull)vehicleId completionHandler:(void (^ _Nonnull)(enum DKVehicleManagerStatus))completionHandler;
- (void)renameVehicleWithName:(NSString * _Nonnull)name vehicleId:(NSString * _Nonnull)vehicleId completionHandler:(void (^ _Nonnull)(enum DKVehicleManagerStatus))completionHandler;
- (void)updateDetectionModeWithVehicleId:(NSString * _Nonnull)vehicleId detectionMode:(enum DKDetectionMode)detectionMode forceGPSVehicleUpdate:(BOOL)forceGPSVehicleUpdate completionHandler:(void (^ _Nonnull)(enum DKDetectionModeStatus))completionHandler;
- (void)getOdometerWithVehicleId:(NSString * _Nonnull)vehicleId type:(enum DKVehicleSynchronizationType)type completionHandler:(void (^ _Nonnull)(enum DKOdometerSyncStatus, DKVehicleOdometer * _Nullable, NSArray<DKVehicleOdometerHistory *> * _Nullable))completionHandler;
- (void)addOdometerHistoryWithVehicleId:(NSString * _Nonnull)vehicleId distance:(double)distance completionHandler:(void (^ _Nonnull)(enum DKOdometerAddHistoryStatus, DKVehicleOdometer * _Nullable, NSArray<DKVehicleOdometerHistory *> * _Nullable))completionHandler;
- (void)updateOdometerHistoryWithVehicleId:(NSString * _Nonnull)vehicleId historyId:(NSString * _Nonnull)historyId distance:(double)distance completionHandler:(void (^ _Nonnull)(enum DKOdometerUpdateHistoryStatus, DKVehicleOdometer * _Nullable, NSArray<DKVehicleOdometerHistory *> * _Nullable))completionHandler;
- (void)deleteOdometerHistoryWithVehicleId:(NSString * _Nonnull)vehicleId historyId:(NSString * _Nonnull)historyId completionHandler:(void (^ _Nonnull)(enum DKOdometerDeleteHistoryStatus, DKVehicleOdometer * _Nullable, NSArray<DKVehicleOdometerHistory *> * _Nullable))completionHandler;
- (void)addBluetoothWithVehicleId:(NSString * _Nonnull)vehicleId bluetooth:(DKBluetooth * _Nonnull)bluetooth completionHandler:(void (^ _Nonnull)(enum DKVehicleBluetoothStatus))completionHandler;
- (void)removeBluetoothWithVehicleId:(NSString * _Nonnull)vehicleId completionHandler:(void (^ _Nonnull)(enum DKVehicleBluetoothRemoveStatus))completionHandler;
- (void)getBeaconWithUniqueId:(NSString * _Nonnull)uniqueId completionHandler:(void (^ _Nonnull)(enum DKVehicleBeaconInfoStatus, DKBeacon * _Nullable))completionHandler;
- (void)updateBeaconBatteryLevelWithBatteryLevel:(NSInteger)batteryLevel beacon:(DKBeacon * _Nonnull)beacon completionHandler:(void (^ _Nonnull)(enum DKVehicleBeaconBatteryStatus))completionHandler;
- (void)addBeaconWithVehicleId:(NSString * _Nonnull)vehicleId beacon:(DKBeacon * _Nonnull)beacon completionHandler:(void (^ _Nonnull)(enum DKVehicleBeaconStatus))completionHandler;
- (void)changeBeaconWithVehicleId:(NSString * _Nonnull)vehicleId oldVehicleId:(NSString * _Nonnull)oldVehicleId beacon:(DKBeacon * _Nonnull)beacon completionHandler:(void (^ _Nonnull)(enum DKVehicleBeaconStatus))completionHandler;
- (void)removeBeaconWithVehicleId:(NSString * _Nonnull)vehicleId completionHandler:(void (^ _Nonnull)(enum DKVehicleBeaconRemoveStatus))completionHandler;
@end


SWIFT_CLASS("_TtC21DriveKitVehicleModule21DriveKitVehiclePicker")
@interface DriveKitVehiclePicker : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DriveKitVehiclePicker * _Nonnull shared;)
+ (DriveKitVehiclePicker * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)getCarModelsWithBrand:(enum DKVehicleBrand)brand engineIndex:(enum DKVehicleEngineIndex)engineIndex completionHandler:(void (^ _Nonnull)(BOOL, NSArray<NSString *> * _Nullable))completionHandler;
- (void)getTruckModelsWithTruckType:(enum DKTruckType)truckType brand:(enum DKVehicleBrand)brand completionHandler:(void (^ _Nonnull)(BOOL, NSArray<NSString *> * _Nullable))completionHandler;
- (void)getCarYearsWithBrand:(enum DKVehicleBrand)brand engineIndex:(enum DKVehicleEngineIndex)engineIndex model:(NSString * _Nonnull)model completionHandler:(void (^ _Nonnull)(BOOL, NSArray<NSString *> * _Nullable))completionHandler;
- (void)getTruckYearsWithTruckType:(enum DKTruckType)truckType brand:(enum DKVehicleBrand)brand model:(NSString * _Nonnull)model completionHandler:(void (^ _Nonnull)(BOOL, NSArray<NSString *> * _Nullable))completionHandler;
- (void)getCarVersionsWithBrand:(enum DKVehicleBrand)brand engineIndex:(enum DKVehicleEngineIndex)engineIndex model:(NSString * _Nonnull)model year:(NSString * _Nonnull)year completionHandler:(void (^ _Nonnull)(BOOL, NSArray<DKVehicleVersion *> * _Nullable))completionHandler;
- (void)getTruckVersionsWithTruckType:(enum DKTruckType)truckType brand:(enum DKVehicleBrand)brand model:(NSString * _Nonnull)model year:(NSString * _Nonnull)year completionHandler:(void (^ _Nonnull)(BOOL, NSArray<DKVehicleVersion *> * _Nullable))completionHandler;
- (void)getCarCharacteristicsWithDqIndex:(NSString * _Nonnull)dqIndex completionHandler:(void (^ _Nonnull)(BOOL, DKCarVehicleCharacteristics * _Nullable))completionHandler;
- (void)getTruckCharacteristicsWithDqIndex:(NSString * _Nonnull)dqIndex completionHandler:(void (^ _Nonnull)(BOOL, DKTruckVehicleCharacteristics * _Nullable))completionHandler;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef DRIVEKITVEHICLEMODULE_SWIFT_H
#define DRIVEKITVEHICLEMODULE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import DriveKitDBVehicleAccessModule;
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DriveKitVehicleModule",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)








@class NSString;

SWIFT_CLASS("_TtC21DriveKitVehicleModule24DKVehicleCharacteristics")
@interface DKVehicleCharacteristics : NSObject
@property (nonatomic, copy) NSString * _Nonnull brand;
@property (nonatomic, copy) NSString * _Nonnull model;
@property (nonatomic, copy) NSString * _Nonnull version;
@property (nonatomic, copy) NSString * _Nonnull year;
@property (nonatomic) NSInteger typeIndex;
@property (nonatomic) NSInteger engineIndex;
@property (nonatomic) double power;
@property (nonatomic) double mass;
@property (nonatomic) double engineDisplacement;
@property (nonatomic) NSInteger gearboxIndex;
@property (nonatomic) double consumption;
@property (nonatomic) NSInteger autoGearboxNumber;
@property (nonatomic, copy) NSString * _Nonnull dqIndex;
@property (nonatomic, copy) NSString * _Nonnull frontTireSize;
@property (nonatomic, copy) NSString * _Nonnull rearTireSize;
@property (nonatomic) double length;
@property (nonatomic) double width;
@property (nonatomic) double height;
@property (nonatomic) NSInteger engineCylinderNb;
@property (nonatomic) NSInteger driveWheels;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC21DriveKitVehicleModule27DKCarVehicleCharacteristics")
@interface DKCarVehicleCharacteristics : DKVehicleCharacteristics
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DKDetectionModeStatus, open) {
  DKDetectionModeStatusSuccess = 0,
  DKDetectionModeStatusError = 1,
  DKDetectionModeStatusGpsModeAlreadyExists = 2,
};

typedef SWIFT_ENUM(NSInteger, DKOdometerAddHistoryStatus, open) {
  DKOdometerAddHistoryStatusSuccess = 0,
  DKOdometerAddHistoryStatusError = 1,
  DKOdometerAddHistoryStatusVehicleNotFound = 2,
  DKOdometerAddHistoryStatusBadDistance = 3,
};

typedef SWIFT_ENUM(NSInteger, DKOdometerDeleteHistoryStatus, open) {
  DKOdometerDeleteHistoryStatusSuccess = 0,
  DKOdometerDeleteHistoryStatusError = 1,
  DKOdometerDeleteHistoryStatusVehicleNotFound = 2,
  DKOdometerDeleteHistoryStatusHistoryNotFound = 3,
  DKOdometerDeleteHistoryStatusLastOdometerError = 4,
};

typedef SWIFT_ENUM(NSInteger, DKOdometerSyncStatus, open) {
  DKOdometerSyncStatusSuccess = 0,
  DKOdometerSyncStatusCacheDataOnly = 1,
  DKOdometerSyncStatusFailedToSyncOdometerCacheOnly = 2,
  DKOdometerSyncStatusVehicleNotFound = 3,
};

typedef SWIFT_ENUM(NSInteger, DKOdometerUpdateHistoryStatus, open) {
  DKOdometerUpdateHistoryStatusSuccess = 0,
  DKOdometerUpdateHistoryStatusError = 1,
  DKOdometerUpdateHistoryStatusVehicleNotFound = 2,
  DKOdometerUpdateHistoryStatusHistoryNotFound = 3,
  DKOdometerUpdateHistoryStatusBadDistance = 4,
};

typedef SWIFT_ENUM(NSInteger, DKTruckType, open) {
  DKTruckTypeStraightTruck = 0,
  DKTruckTypeSemiTrailerTruck = 1,
  DKTruckTypeRoadTrain = 2,
};


SWIFT_CLASS("_TtC21DriveKitVehicleModule29DKTruckVehicleCharacteristics")
@interface DKTruckVehicleCharacteristics : DKVehicleCharacteristics
@property (nonatomic) double ptac;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


typedef SWIFT_ENUM(NSInteger, DKVehicleBeaconBatteryStatus, open) {
  DKVehicleBeaconBatteryStatusSuccess = 0,
  DKVehicleBeaconBatteryStatusError = 1,
  DKVehicleBeaconBatteryStatusUnknownBeacon = 2,
  DKVehicleBeaconBatteryStatusInvalidBeacon = 3,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBeaconInfoStatus, open) {
  DKVehicleBeaconInfoStatusSuccess = 0,
  DKVehicleBeaconInfoStatusError = 1,
  DKVehicleBeaconInfoStatusUnknownBeacon = 2,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBeaconRemoveStatus, open) {
  DKVehicleBeaconRemoveStatusSuccess = 0,
  DKVehicleBeaconRemoveStatusError = 1,
  DKVehicleBeaconRemoveStatusUnknownVehicle = 2,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBeaconStatus, open) {
  DKVehicleBeaconStatusSuccess = 0,
  DKVehicleBeaconStatusError = 1,
  DKVehicleBeaconStatusUnknownVehicle = 2,
  DKVehicleBeaconStatusUnavailableBeacon = 3,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBluetoothRemoveStatus, open) {
  DKVehicleBluetoothRemoveStatusSuccess = 0,
  DKVehicleBluetoothRemoveStatusUnknownVehicle = 1,
  DKVehicleBluetoothRemoveStatusError = 2,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBluetoothStatus, open) {
  DKVehicleBluetoothStatusSuccess = 0,
  DKVehicleBluetoothStatusUnavailableBluetooth = 1,
  DKVehicleBluetoothStatusUnknownVehicle = 2,
  DKVehicleBluetoothStatusError = 3,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleBrand, open) {
  DKVehicleBrandAbarth = 0,
  DKVehicleBrandAlpha_romeo = 1,
  DKVehicleBrandAlpina = 2,
  DKVehicleBrandAlpine = 3,
  DKVehicleBrandAston_martin = 4,
  DKVehicleBrandAudi = 5,
  DKVehicleBrandBentley = 6,
  DKVehicleBrandBmw = 7,
  DKVehicleBrandBollore = 8,
  DKVehicleBrandBugatti = 9,
  DKVehicleBrandCadillac = 10,
  DKVehicleBrandCaterham = 11,
  DKVehicleBrandChevrolet = 12,
  DKVehicleBrandChrysler = 13,
  DKVehicleBrandCitroen = 14,
  DKVehicleBrandCupra = 15,
  DKVehicleBrandDacia = 16,
  DKVehicleBrandDaewoo = 17,
  DKVehicleBrandDaf_truck = 18,
  DKVehicleBrandDaihatsu = 19,
  DKVehicleBrandDe_tomaso = 20,
  DKVehicleBrandDodge = 21,
  DKVehicleBrandDonkervoort = 22,
  DKVehicleBrandDs = 23,
  DKVehicleBrandFam_automobiles = 24,
  DKVehicleBrandFerrari = 25,
  DKVehicleBrandFiat = 26,
  DKVehicleBrandFisker = 27,
  DKVehicleBrandFord = 28,
  DKVehicleBrandGinetta = 29,
  DKVehicleBrandHommell = 30,
  DKVehicleBrandHonda = 31,
  DKVehicleBrandHummer = 32,
  DKVehicleBrandHyundai = 33,
  DKVehicleBrandInfiniti = 34,
  DKVehicleBrandIsuzu = 35,
  DKVehicleBrandIveco = 36,
  DKVehicleBrandIveco_truck = 37,
  DKVehicleBrandJaguar = 38,
  DKVehicleBrandJeep = 39,
  DKVehicleBrandKia = 40,
  DKVehicleBrandKtm = 41,
  DKVehicleBrandLada = 42,
  DKVehicleBrandLamborghini = 43,
  DKVehicleBrandLancia = 44,
  DKVehicleBrandLand_rover = 45,
  DKVehicleBrandLdv = 46,
  DKVehicleBrandLexus = 47,
  DKVehicleBrandLotus = 48,
  DKVehicleBrandMahindra = 49,
  DKVehicleBrandMan = 50,
  DKVehicleBrandMan_truck = 51,
  DKVehicleBrandMaserati = 52,
  DKVehicleBrandMatra = 53,
  DKVehicleBrandMaybach = 54,
  DKVehicleBrandMazda = 55,
  DKVehicleBrandMclaren = 56,
  DKVehicleBrandMega = 57,
  DKVehicleBrandMercedes = 58,
  DKVehicleBrandMercedes_amg = 59,
  DKVehicleBrandMercedes_truck = 60,
  DKVehicleBrandMg = 61,
  DKVehicleBrandMia_electric = 62,
  DKVehicleBrandMini = 63,
  DKVehicleBrandMitsubishi = 64,
  DKVehicleBrandMorgan = 65,
  DKVehicleBrandNissan = 66,
  DKVehicleBrandOpel = 67,
  DKVehicleBrandPeugeot = 68,
  DKVehicleBrandPgo = 69,
  DKVehicleBrandPolestar = 70,
  DKVehicleBrandPorsche = 71,
  DKVehicleBrandRenault = 72,
  DKVehicleBrandRenault_truck = 73,
  DKVehicleBrandRolls_royce = 74,
  DKVehicleBrandRover = 75,
  DKVehicleBrandSaab = 76,
  DKVehicleBrandSantana = 77,
  DKVehicleBrandScania_truck = 78,
  DKVehicleBrandSeat = 79,
  DKVehicleBrandSecma = 80,
  DKVehicleBrandSeres = 81,
  DKVehicleBrandSkoda = 82,
  DKVehicleBrandSmart = 83,
  DKVehicleBrandSsangyong = 84,
  DKVehicleBrandSubaru = 85,
  DKVehicleBrandSuzuki = 86,
  DKVehicleBrandTesla = 87,
  DKVehicleBrandToyota = 88,
  DKVehicleBrandTvr = 89,
  DKVehicleBrandVenturi = 90,
  DKVehicleBrandVinfast = 91,
  DKVehicleBrandVolkswagen = 92,
  DKVehicleBrandVolvo = 93,
  DKVehicleBrandVolvo_truck = 94,
  DKVehicleBrandWestfield = 95,
  DKVehicleBrandWiesmann = 96,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleCategory, open) {
  DKVehicleCategoryMicro = 1,
  DKVehicleCategoryCompact = 8,
  DKVehicleCategorySedan = 2,
  DKVehicleCategorySuv = 6,
  DKVehicleCategoryMinivan = 5,
  DKVehicleCategoryCommercial = 9,
  DKVehicleCategoryLuxury = 3,
  DKVehicleCategorySport = 7,
  DKVehicleCategoryTwoAxlesStraightTruck = 200,
  DKVehicleCategoryThreeAxlesStraightTruck = 201,
  DKVehicleCategoryFourAxlesStraightTruck = 202,
  DKVehicleCategoryTwoAxlesTractor = 203,
  DKVehicleCategoryThreeAxlesTractor = 204,
  DKVehicleCategoryFourAxlesTractor = 205,
};


typedef SWIFT_ENUM(NSInteger, DKVehicleEngineIndex, open) {
  DKVehicleEngineIndexGasoline = 1,
  DKVehicleEngineIndexDiesel = 2,
  DKVehicleEngineIndexElectric = 3,
  DKVehicleEngineIndexGasolineHybrid = 4,
  DKVehicleEngineIndexDieselHybrid = 5,
  DKVehicleEngineIndexBiofuel = 6,
  DKVehicleEngineIndexBiFuelBioethanol = 7,
  DKVehicleEngineIndexBiFuelNGV = 8,
  DKVehicleEngineIndexBiFuelLPG = 9,
  DKVehicleEngineIndexNotAvailable = 10,
  DKVehicleEngineIndexPlugInGasolineHybrid = 11,
  DKVehicleEngineIndexHydrogen = 12,
};


SWIFT_CLASS("_TtC21DriveKitVehicleModule26DKVehicleGetBeaconResponse")
@interface DKVehicleGetBeaconResponse : NSObject
@property (nonatomic, readonly) NSInteger major;
@property (nonatomic, readonly) NSInteger minor;
@property (nonatomic, readonly, copy) NSString * _Nonnull proximityUuid;
@property (nonatomic, readonly, copy) NSString * _Nonnull uniqueId;
@end

typedef SWIFT_ENUM(NSInteger, DKVehicleManagerStatus, open) {
  DKVehicleManagerStatusSuccess = 0,
  DKVehicleManagerStatusUnknownVehicle = 1,
  DKVehicleManagerStatusInvalidCharacteristics = 2,
  DKVehicleManagerStatusVehicleIdAlreadyUsed = 3,
  DKVehicleManagerStatusError = 4,
  DKVehicleManagerStatusOnlyOneGpsVehicleAllowed = 5,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleReplaceStatus, open) {
  DKVehicleReplaceStatusSuccess = 0,
  DKVehicleReplaceStatusInvalidVehicle = 1,
  DKVehicleReplaceStatusError = 2,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleSyncStatus, open) {
  DKVehicleSyncStatusNoError = 0,
  DKVehicleSyncStatusCacheDataOnly = 1,
  DKVehicleSyncStatusFailedToSyncVehiclesCacheOnly = 2,
  DKVehicleSyncStatusSyncAlreadyInProgress = 3,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleSynchronizationType, open) {
  DKVehicleSynchronizationTypeDefaultSync = 0,
  DKVehicleSynchronizationTypeCache = 1,
};

typedef SWIFT_ENUM(NSInteger, DKVehicleType, open) {
  DKVehicleTypeCar = 0,
  DKVehicleTypeTruck = 1,
};


SWIFT_CLASS("_TtC21DriveKitVehicleModule16DKVehicleVersion")
@interface DKVehicleVersion : NSObject
@property (nonatomic, readonly, copy) NSString * _Nonnull version;
@property (nonatomic, readonly, copy) NSString * _Nonnull dqIndex;
- (nonnull instancetype)initWithVersion:(NSString * _Nonnull)version dqIndex:(NSString * _Nonnull)dqIndex OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class DKVehicle;
@class DKVehicleOdometer;
@class DKVehicleOdometerHistory;
@class DKBluetooth;
@class DKBeacon;

SWIFT_CLASS("_TtC21DriveKitVehicleModule15DriveKitVehicle")
@interface DriveKitVehicle : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nonnull sdkVersion;)
+ (NSString * _Nonnull)sdkVersion SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DriveKitVehicle * _Nonnull shared;)
+ (DriveKitVehicle * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)initialize;
- (void)reset SWIFT_DEPRECATED_MSG("You no longer need to call the reset method of any module except the one in DriveKit");
- (void)getVehiclesOrderByNameAscWithType:(enum DKVehicleSynchronizationType)type completionHandler:(void (^ _Nonnull)(enum DKVehicleSyncStatus, NSArray<DKVehicle *> * _Nonnull))completionHandler;
- (void)getVehicleWithVehicleId:(NSString * _Nonnull)vehicleId type:(enum DKVehicleSynchronizationType)type completionHandler:(void (^ _Nonnull)(enum DKVehicleSyncStatus, DKVehicle * _Nullable))completionHandler;
- (void)createCustomVehicleWithCharacteristics:(DKVehicleCharacteristics * _Nonnull)characteristics name:(NSString * _Nullable)name id:(NSString * _Nonnull)id completionHandler:(void (^ _Nonnull)(enum DKVehicleManagerStatus, DKVehicle * _Nullable))completionHandler;
- (void)createCarVehicleWithCharacteristics:(DKCarVehicleCharacteristics * _Nonnull)characteristics name:(NSString * _Nullable)name liteConfig:(BOOL)liteConfig detectionMode:(enum DKDetectionMode)detectionMode completionHandler:(void (^ _Nonnull)(enum DKVehicleManagerStatus, DKVehicle * _Nullable))completionHandler;
- (void)createTruckVehicleWithCharacteristics:(DKTruckVehicleCharacteristics * _Nonnull)characteristics name:(NSString * _Nullable)name detectionMode:(enum DKDetectionMode)detectionMode completionHandler:(void (^ _Nonnull)(enum DKVehicleManagerStatus, DKVehicle * _Nullable))completionHandler;
- (void)replaceWithCarVehicleWithOldVehicleId:(NSString * _Nonnull)oldVehicleId characteristics:(DKCarVehicleCharacteristics * _Nonnull)characteristics name:(NSString * _Nullable)name liteConfig:(BOOL)liteConfig completionHandler:(void (^ _Nonnull)(enum DKVehicleReplaceStatus, DKVehicle * _Nullable))completionHandler;
- (void)replaceWithTruckVehicleWithOldVehicleId:(NSString * _Nonnull)oldVehicleId characteristics:(DKTruckVehicleCharacteristics * _Nonnull)characteristics name:(NSString * _Nullable)name completionHandler:(void (^ _Nonnull)(enum DKVehicleReplaceStatus, DKVehicle * _Nullable))completionHandler;
- (void)deleteVehicleWithVehicleId:(NSString * _Nonnull)vehicleId completionHandler:(void (^ _Nonnull)(enum DKVehicleManagerStatus))completionHandler;
- (void)renameVehicleWithName:(NSString * _Nonnull)name vehicleId:(NSString * _Nonnull)vehicleId completionHandler:(void (^ _Nonnull)(enum DKVehicleManagerStatus))completionHandler;
- (void)updateDetectionModeWithVehicleId:(NSString * _Nonnull)vehicleId detectionMode:(enum DKDetectionMode)detectionMode forceGPSVehicleUpdate:(BOOL)forceGPSVehicleUpdate completionHandler:(void (^ _Nonnull)(enum DKDetectionModeStatus))completionHandler;
- (void)getOdometerWithVehicleId:(NSString * _Nonnull)vehicleId type:(enum DKVehicleSynchronizationType)type completionHandler:(void (^ _Nonnull)(enum DKOdometerSyncStatus, DKVehicleOdometer * _Nullable, NSArray<DKVehicleOdometerHistory *> * _Nullable))completionHandler;
- (void)addOdometerHistoryWithVehicleId:(NSString * _Nonnull)vehicleId distance:(double)distance completionHandler:(void (^ _Nonnull)(enum DKOdometerAddHistoryStatus, DKVehicleOdometer * _Nullable, NSArray<DKVehicleOdometerHistory *> * _Nullable))completionHandler;
- (void)updateOdometerHistoryWithVehicleId:(NSString * _Nonnull)vehicleId historyId:(NSString * _Nonnull)historyId distance:(double)distance completionHandler:(void (^ _Nonnull)(enum DKOdometerUpdateHistoryStatus, DKVehicleOdometer * _Nullable, NSArray<DKVehicleOdometerHistory *> * _Nullable))completionHandler;
- (void)deleteOdometerHistoryWithVehicleId:(NSString * _Nonnull)vehicleId historyId:(NSString * _Nonnull)historyId completionHandler:(void (^ _Nonnull)(enum DKOdometerDeleteHistoryStatus, DKVehicleOdometer * _Nullable, NSArray<DKVehicleOdometerHistory *> * _Nullable))completionHandler;
- (void)addBluetoothWithVehicleId:(NSString * _Nonnull)vehicleId bluetooth:(DKBluetooth * _Nonnull)bluetooth completionHandler:(void (^ _Nonnull)(enum DKVehicleBluetoothStatus))completionHandler;
- (void)removeBluetoothWithVehicleId:(NSString * _Nonnull)vehicleId completionHandler:(void (^ _Nonnull)(enum DKVehicleBluetoothRemoveStatus))completionHandler;
- (void)getBeaconWithUniqueId:(NSString * _Nonnull)uniqueId completionHandler:(void (^ _Nonnull)(enum DKVehicleBeaconInfoStatus, DKBeacon * _Nullable))completionHandler;
- (void)updateBeaconBatteryLevelWithBatteryLevel:(NSInteger)batteryLevel beacon:(DKBeacon * _Nonnull)beacon completionHandler:(void (^ _Nonnull)(enum DKVehicleBeaconBatteryStatus))completionHandler;
- (void)addBeaconWithVehicleId:(NSString * _Nonnull)vehicleId beacon:(DKBeacon * _Nonnull)beacon completionHandler:(void (^ _Nonnull)(enum DKVehicleBeaconStatus))completionHandler;
- (void)changeBeaconWithVehicleId:(NSString * _Nonnull)vehicleId oldVehicleId:(NSString * _Nonnull)oldVehicleId beacon:(DKBeacon * _Nonnull)beacon completionHandler:(void (^ _Nonnull)(enum DKVehicleBeaconStatus))completionHandler;
- (void)removeBeaconWithVehicleId:(NSString * _Nonnull)vehicleId completionHandler:(void (^ _Nonnull)(enum DKVehicleBeaconRemoveStatus))completionHandler;
@end


SWIFT_CLASS("_TtC21DriveKitVehicleModule21DriveKitVehiclePicker")
@interface DriveKitVehiclePicker : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DriveKitVehiclePicker * _Nonnull shared;)
+ (DriveKitVehiclePicker * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)getCarModelsWithBrand:(enum DKVehicleBrand)brand engineIndex:(enum DKVehicleEngineIndex)engineIndex completionHandler:(void (^ _Nonnull)(BOOL, NSArray<NSString *> * _Nullable))completionHandler;
- (void)getTruckModelsWithTruckType:(enum DKTruckType)truckType brand:(enum DKVehicleBrand)brand completionHandler:(void (^ _Nonnull)(BOOL, NSArray<NSString *> * _Nullable))completionHandler;
- (void)getCarYearsWithBrand:(enum DKVehicleBrand)brand engineIndex:(enum DKVehicleEngineIndex)engineIndex model:(NSString * _Nonnull)model completionHandler:(void (^ _Nonnull)(BOOL, NSArray<NSString *> * _Nullable))completionHandler;
- (void)getTruckYearsWithTruckType:(enum DKTruckType)truckType brand:(enum DKVehicleBrand)brand model:(NSString * _Nonnull)model completionHandler:(void (^ _Nonnull)(BOOL, NSArray<NSString *> * _Nullable))completionHandler;
- (void)getCarVersionsWithBrand:(enum DKVehicleBrand)brand engineIndex:(enum DKVehicleEngineIndex)engineIndex model:(NSString * _Nonnull)model year:(NSString * _Nonnull)year completionHandler:(void (^ _Nonnull)(BOOL, NSArray<DKVehicleVersion *> * _Nullable))completionHandler;
- (void)getTruckVersionsWithTruckType:(enum DKTruckType)truckType brand:(enum DKVehicleBrand)brand model:(NSString * _Nonnull)model year:(NSString * _Nonnull)year completionHandler:(void (^ _Nonnull)(BOOL, NSArray<DKVehicleVersion *> * _Nullable))completionHandler;
- (void)getCarCharacteristicsWithDqIndex:(NSString * _Nonnull)dqIndex completionHandler:(void (^ _Nonnull)(BOOL, DKCarVehicleCharacteristics * _Nullable))completionHandler;
- (void)getTruckCharacteristicsWithDqIndex:(NSString * _Nonnull)dqIndex completionHandler:(void (^ _Nonnull)(BOOL, DKTruckVehicleCharacteristics * _Nullable))completionHandler;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
