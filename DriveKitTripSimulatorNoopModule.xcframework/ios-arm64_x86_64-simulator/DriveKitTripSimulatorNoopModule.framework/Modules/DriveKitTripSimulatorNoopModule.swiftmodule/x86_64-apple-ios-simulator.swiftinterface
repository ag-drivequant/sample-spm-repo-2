// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
// swift-module-flags: -target x86_64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name DriveKitTripSimulatorNoopModule
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import DriveKitCoreModule
import DriveKitTripSimulatorApiModule
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
public typealias PresetCrashConfiguration = DriveKitTripSimulatorApiModule.PresetCrashConfiguration
public typealias PresetCrash = DriveKitTripSimulatorApiModule.PresetCrash
public typealias PresetTrip = DriveKitTripSimulatorApiModule.PresetTrip
public typealias DKTripSimulatorDelegate = DriveKitTripSimulatorApiModule.DKTripSimulatorDelegate
@_inheritsConvenienceInitializers @objc public class DriveKitTripSimulator : ObjectiveC.NSObject, DriveKitTripSimulatorApiModule.DriveKitTripSimulatorApi {
  @objc public var isNoop: Swift.Bool
  @objc public static let sdkVersion: Swift.String
  @objc public static let shared: DriveKitTripSimulatorNoopModule.DriveKitTripSimulator
  @objc public var isSimulatingTrip: Swift.Bool {
    get
  }
  @objc public func initialize()
  @objc public func startCrashTrip(_ config: DriveKitTripSimulatorNoopModule.PresetCrashConfiguration)
  public func startCrashTrip(_ config: DriveKitTripSimulatorApiModule.PresetCrashConfiguration, delegate: (any DriveKitTripSimulatorApiModule.DKTripSimulatorDelegate)? = nil)
  @objc public func start(_ trip: DriveKitTripSimulatorNoopModule.PresetTrip, crash: DriveKitTripSimulatorNoopModule.PresetCrash = .none, crashTime: Swift.Int = -1, delegate: (any DriveKitTripSimulatorApiModule.DKTripSimulatorDelegate)? = nil)
  @objc public func stop()
  @objc override dynamic public init()
  @objc deinit
}
#if compiler(>=5.3) && $RetroactiveAttribute
extension DriveKitTripSimulatorApiModule.PresetTrip : @retroactive DriveKitTripSimulatorApiModule.PresetTripApi {
  public func getDistance() -> Swift.Double
  public func getSimulationDuration() -> Swift.Double
}
#else
extension DriveKitTripSimulatorApiModule.PresetTrip : DriveKitTripSimulatorApiModule.PresetTripApi {
  public func getDistance() -> Swift.Double
  public func getSimulationDuration() -> Swift.Double
}
#endif
#if compiler(>=5.3) && $RetroactiveAttribute
extension DriveKitTripSimulatorApiModule.PresetCrashConfiguration : @retroactive DriveKitTripSimulatorApiModule.PresetCrashConfigurationApi {
  public func getPresetTrip() -> DriveKitTripSimulatorNoopModule.PresetTrip
}
#else
extension DriveKitTripSimulatorApiModule.PresetCrashConfiguration : DriveKitTripSimulatorApiModule.PresetCrashConfigurationApi {
  public func getPresetTrip() -> DriveKitTripSimulatorNoopModule.PresetTrip
}
#endif
